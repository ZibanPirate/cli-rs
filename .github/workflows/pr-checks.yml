name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - "**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build

  fmt:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - uses: Swatinem/rust-cache@v2

      - name: Run clippy
        run: cargo clippy -- -D warnings

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      - uses: cargo-bins/cargo-binstall@main

      - name: Install tarpaulin
        run: cargo binstall cargo-tarpaulin

      - name: Run tests
        # todo-zm: bring back coverage threshold to 100
        run: cargo tarpaulin --out Lcov --fail-under 50 --output-dir=./coverage --exclude-files="*/tests/*"

      - name: Cache coverage report
        uses: actions/cache@v4
        with:
          path: coverage/lcov.info
          key: ${{ runner.os }}-coverage-${{ github.run_id }}

  prettier:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Check prettier formatting
        run: |
          npx -y prettier --check .

  sonarqube:
    name: SonarQube
    needs: [build, fmt, clippy, test, prettier]
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Restore coverage report
        uses: actions/cache@v3
        with:
          path: coverage/lcov.info
          key: ${{ runner.os }}-coverage-${{ github.run_id }}

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
